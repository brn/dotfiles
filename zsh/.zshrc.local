## Environment variable configuration
#
# LANG
# http://curiousabt.blog27.fc2.com/blog-entry-65.html

export PYENV_ROOT=$HOME/.pyenv

export LANG=ja_JP.UTF-8
export LESSCHARSET=utf-8
export PHANTOM_INSTALL_DIR=~/.mocha/phantom/osx
export NODE_PATH=~/.nodebrew/current/lib/node_modules
export MAVEN_OPTS=-Dfile.encoding=UTF-8
export CLASS_PATH=$CLASSPATH:/Users/`whoami`/dev/apache-tomcat-6.0.32/lib/mysql-connector-java-5.1.21-bin.jar
export CLOSURE_PATH=/usr/local/Cellar/closure-compiler/20120710/libexec
export ANT_OPTS=-Dfile.encoding=UTF8
export TERMINFO_DIRS=/usr/local/Cellar/ncurses/5.9/share/terminfo:/usr/share/terminfo:/usr/local/share/terminfo
export GEM_PATH=~/.gem/ruby/1.8/bin
export NODE_WATCHER="watcher"
export WORKSPACE=~/Documents/workspace
export INCLUDE=/usr/local/include/
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export CATALINA_HOME=/usr/local/Cellar/tomcat/7.0.54/libexec
export ANDROID_HOME=$HOME/Library/Android/sdk
export _WK=$WORKSPACE
export CPATH=''
export V8_BUILDER=13.115.196.98
#export CPATH=/Applications/Xcode.app/Contents/Developer/Toolchains/XcodeDefault.xctoolchain/usr/include/c++/v1/
#export LEIN_JAVA_CMD=`which drip`
#export LEIN_FAST_TRAMPOLINE=y
export GOPATH=$HOME/go
export GOENV_ROOT=$HOME/.goenv


## PATH
export PATH=/usr/local/Cellar/gcc/10.2.0_4/bin/:/usr/local/Cellar/gcc/10.2.0_4/lib/gcc/10/:$PATH
export PATH=$GOENV_ROOT/bin:$PATH
export PATH=$PATH:$GOPATH/bin
export PATH=$PYENV_ROOT/bin:/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:~/bin:/Application:/Users/`whoami`/.rbenv/shims:~/bin:~/GitHub/depot_tools:$PATH:$ANDROID_HOME/tools:$PATH:$ANDROID_HOME/platform-tools:$HOME/.jsvu
export PATH=/usr/local/opt/llvm/bin:$PATH
export PATH=~/.nodebrew/current/bin:$PATH
export PATH=~/.cabal/bin/:$PATH
export PATH=$PATH:/usr/local/Cellar/tmux/1.7/bin:/usr/local/Cellar/ncurses/5.9/share/terminfo
export PATH=${JAVA_HOME}/bin:${PATH}
export PATH=$HOME/.rust/bin:$PATH
export PATH=$PATH:/opt/homebrew-cask/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/bin/
export PATH=$HOME/.goenv/bin:$PATH
export DYLD_LIBRARY_PATH=$HOME/.rust/lib:$HOME/.rust/lib/rustlib/x86_64-apple-darwin/lib:$DYLD_LIBRARY_PATH

export OS_AUTH_URL=http://10.6.250.11/v2.0
export OS_TENANT_NAME="right_segment"
export OS_USERNAME="right_segment"
export OS_PASSWORD=Kte95SrJeDYKASzjBeMQShARYshUlqr
export EDITOR=emacs
## PATH

alias emacs='TERM=xterm-256color /usr/local/Cellar/emacs-head@28/28.0.50_1/bin/emacsclient -a "/usr/local/Cellar/emacs-head@28/28.0.50_1/bin/emacs -nw --daemon" -nw'
alias refresh_p='source ~/.zshrc'
alias ll='ls -lG'
alias git-c='git checkout'
alias gcp-activate='gcloud config configurations activate'
alias gcp-config='gcloud config'
alias kc='kubectl'
alias diff='colordiff'
alias ya='yarn'
alias yar='yarn run'
alias yai='yarn install --frozen-lockfile'

alias gico='git checkout'
alias girb='git rebase'
alias gipu='git push'
alias gipl='git pull'

eval "$(rbenv init -)"
eval "$(pyenv init -)"
eval "$(goenv init -)"
eval "$(direnv hook zsh)"

source /usr/local/Caskroom/google-cloud-sdk/latest/google-cloud-sdk/path.zsh.inc
source ~/.cargo/env

function show-current-dir-as-window-name() {
  local PWD_LEN=${#PWD}
  local DISPLAY_PWD=$PWD
  if [ "$PWD_LEN" -gt 30 ]; then
    DISPLAY_PWD=$(echo $PWD | cut -c$(($PWD_LEN-30))-)
  fi
  echo $DISPLAY_PWD
}

add-zsh-hook chpwd show-current-dir-as-window-name

function view-gcr-build() {
  open 'https://console.cloud.google.com/gcr/builds?project=cyberagent-037&authuser=0&hl=ja&organizationId=1051569445158'
}

function send-v8() {
  sh ~/.send-v8.sh
}
function watch-v8() {
  if [ ! -e /tmp/watch-v8.pid ]
  then
    overlook watch -t ~/GitHub/v8/ -e ~/.send-v8.sh > /dev/null 2>&1 &
    echo $! > /tmp/watch-v8.pid
  else
    echo "Already watched"
  fi
}
function v8-builder-state() {
  aws ec2 describe-instances --profile brn | jq '.Reservations[0].Instances[0].State.Code'
}
function stop-v8-builder() {
  local state=$(v8-builder-state)
  if [ "$state" = "16" ]
  then
    local readonly id=$(aws ec2 describe-instances --profile brn | jq -r '.Reservations[0].Instances[0].InstanceId')
    aws ec2 stop-instances --profile brn --instance-ids ${id} > /dev/null 2>&1
    while [ ! "$(v8-builder-state)" = "80" ]
    do
      sleep 1
      echo -n '.'
    done
  else
    echo "V8_BUILDER not running."
  fi
  if [ -e /tmp/watch-v8.pid ]
  then
    kill $(cat /tmp/watch-v8.pid)
    rm /tmp/watch-v8.pid
  fi
}
function start-v8-builder() {
  local state=$(v8-builder-state)
  if [ ! "$state" = "16" ]
  then
    local readonly id=$(aws ec2 describe-instances --profile brn | jq -r '.Reservations[0].Instances[0].InstanceId')
    aws ec2 start-instances --profile brn --instance-ids ${id} > /dev/null 2>&1
    while [ ! "$(v8-builder-state)" = "16" ]
    do
      sleep 1
      echo -n '.'
    done
  else
    echo "V8_BUILDER already running."
  fi
  watch-v8
}

function rsvm() {
  [ -s /Users/a12360/.rsvm/rsvm.sh ] && . /Users/a12360/.rsvm/rsvm.sh %@
}

function wcbg() {
  local dataurl=$(dataurl $1)
  local size=$(identify -format '%wx%h' $1)
  SIZE_JSON=$(echo $size | sed -e 's/\([0-9]\{1,3\}\)x\([0-9]\{1,3\}\)$/|"width": \1, "height": \2/g' | cut -d'|' -f2)
  echo "\"background-image\": \"$dataurl\",\\n\"background-color\": \"transparent\",\\n$SIZE_JSON" | pbcopy
}

function dataurl() {
  base64=$(openssl base64 < $1 | tr -d '\n')
  echo "data:image/png;base64,${base64}"
}

function tssh() {
    panewrap $1 && ssh $@
}

function java_use() {
    export JAVA_HOME=$(/usr/libexec/java_home -v $1)
    export PATH=$JAVA_HOME/bin:$PATH
    java -version
}


function push-dotfiles {
    local cwd=`pwd`
    cd ~/GitHub/dotfiles
    git add . && git commit -m 'UPDATED.' && git push
    cd $cwd
}


function serve {
    local cwd=`pwd`
    cd ~/GitHub/simple_dev_env/
    test -f stderrout.log && rm stderrout.log
    $(node server.js $@ > stderrout.log 2>&1 &) || exit 1
    SERVE_PID=$(ps aux | grep 'node server.js' | grep -v grep | awk '{print $2}')
    echo $SERVE_PID > server.pid
    cd $cwd;
    echo "server start"
}

function exit_serve() {
    SERVE_PID=$(cat ~/GitHub/simple_dev_env/server.pid)
    kill -TERM $SERVE_PID
    rm ~/GitHub/simple_dev_env/server.pid
    echo "server stop"
}

reattach-to-user-namespace launchctl setenv NODE_HOME $HOME/.nodebrew/current/bin
reattach-to-user-namespace launchctl setenv NODE_PATH $NODE_PATH

function node-use {
    #nodebrew selfupdate
    #nodebrew install stable
    nodebrew use stable > /dev/null
    echo 'nodejs version =>' `node --version`
}

function pids {
    ps aux | grep $1 | grep -v grep | awk '{print $2}'
}

function pass-of {
    if [ "$1" = "" ]
    then
        cat ~/camp-pass/pass.txt | jq --raw-output 'keys'
    else
        cat ~/camp-pass/pass.txt | jq --raw-output '.["'$1'"]["pass"]' | pbcopy
    fi
}

function id-of {
    if [ "$1" = "" ]
    then
        cat ~/camp-pass/pass.txt | jq --raw-output 'keys'
    else
        cat ~/camp-pass/pass.txt | jq --raw-output '.["'$1'"]["id"]' | pbcopy
    fi
}

function _pass-of {
    _values "passphrase" $(node -e "console.log(Object.keys(JSON.parse(require('fs').readFileSync('/Users/$(whoami)/camp-pass/pass.txt'))).join(' '))")
}

function update-closure-compiler {
    local dir=$(mktemp -d "/tmp/closure-compiler.XXXXXXXXX")
    local tmpfile=`basename $dir`.tar.gz
    local save_path=/tmp/$tmpfile
    wget -O $save_path http://dl.google.com/closure-compiler/compiler-latest.tar.gz
    tar -xvzf $save_path -C $dir &&\
        sudo mv $dir/compiler.jar /usr/local/bin/closure-compiler.jar && rm -rf $save_path && rm -rf $dir
}

function tagsys_vagrant {
  PWD=$(pwd)
  cd ~/Vagrant
  vagrant ${1} tagsys
  cd $PWD
}

function command_not_found_handler() {
  echo "おい大友ぉ!!$1はコマンドじゃないでぇ!?このボケェ!!どう責任取るんやコラァ!!おぉ!!"
}

node-use

compdef _pass-of pass-of

panewrap () { printf '\033k%s\033\\' "$1"; }

#PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'

check_merge() {
    git format-patch `git rev-parse --abbrev-ref HEAD`..`git rev-parse --abbrev-ref '@{-1}'` --stdout | git apply --check
}

npm_required() {
  npm install yarn typescript prettier tslint storybook yaml2json json-diff -g
}