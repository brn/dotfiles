## Environment variable configuration
#
# LANG
# http://curiousabt.blog27.fc2.com/blog-entry-65.html

## PATH
export PATH=/usr/local/bin:/usr/local/sbin:/usr/bin:/usr/sbin:/bin:/sbin:~/bin:/Application:/Users/aono_taketoshi/.rbenv/shims:~/bin:$PATH
export PATH=~/.nodebrew/current/bin:$PATH
export PATH=~/.cabal/bin/:$PATH
export PATH=$PATH:/usr/local/Cellar/tmux/1.7/bin:/usr/local/Cellar/ncurses/5.9/share/terminfo
export PATH=${JAVA_HOME}/bin:${PATH}
## PATH

export LANG=ja_JP.UTF-8
export LESSCHARSET=utf-8
export PHANTOM_INSTALL_DIR=~/.mocha/phantom/osx
export NODE_PATH=~/.nodebrew/current/lib/node_modules
export MAVEN_OPTS=-Dfile.encoding=UTF-8
export CLASS_PATH=$CLASSPATH:/Users/aono_taketoshi/dev/apache-tomcat-6.0.32/lib/mysql-connector-java-5.1.21-bin.jar
export CLOSURE_PATH=/usr/local/Cellar/closure-compiler/20120710/libexec
export ANT_OPTS=-Dfile.encoding=UTF8
export TERMINFO_DIRS=/usr/local/Cellar/ncurses/5.9/share/terminfo:/usr/share/terminfo:/usr/local/share/terminfo
export GEM_PATH=~/.gem/ruby/1.8/bin
export NODE_WATCHER="watcher"
export WORKSPACE=~/Documents/workspace
export INCLUDE=/usr/local/include/
export JAVA_HOME=`/usr/libexec/java_home -v 1.8`
export CATALINA_HOME=/usr/local/Cellar/tomcat/7.0.54/libexec
export _WK=$WORKSPACE
export PATH=${JAVA_HOME}/bin:${PATH}
alias emacs="TERM=xterm-256color emacs"
alias refresh_p='source ~/.zshrc'
alias ll='ls -l'
alias ssh-tag-server-dev='ssh -i ~/Desktop/aono_taketoshi/devtag/id_rsa devtag@10.123.195.11'
alias ssh-tagmng-dev='ssh -i ~/Desktop/aono_taketoshi/devtag/id_rsa devtag@10.123.195.21'
eval "$(rbenv init -)"

function tssh() {
  panewrap $1 && ssh $@
}

function java_use() {
    export JAVA_HOME=$(/usr/libexec/java_home -v $1)
    export PATH=$JAVA_HOME/bin:$PATH
    java -version
}


function serve {
  local cwd=`pwd`
  cd ~/github/simple_dev_env/
  node server.js $@
  cd $cwd;
}

reattach-to-user-namespace launchctl setenv NODE_HOME $HOME/.nodebrew/current/bin
reattach-to-user-namespace launchctl setenv NODE_PATH $NODE_PATH

function node-use {
    #nodebrew selfupdate
    #nodebrew install stable
    nodebrew use stable > /dev/null
    echo 'nodejs version =>' `node --version`
}

function pids {
  ps aux | grep $1 | grep -v grep | awk '{print $2}'
}

function pass-of {
  if [ "$1" = "" ]
  then
      cat ~/camp-pass/pass.txt | jq --raw-output 'keys'
  else
      cat ~/camp-pass/pass.txt | jq --raw-output '.["'$1'"]["pass"]' | pbcopy
  fi
}

function id-of {
  if [ "$1" = "" ]
  then
      cat ~/camp-pass/pass.txt | jq --raw-output 'keys'
  else
      cat ~/camp-pass/pass.txt | jq --raw-output '.["'$1'"]["id"]' | pbcopy
  fi
}

function _pass-of {
    _values "passphrase" `node -e 'console.log(Object.keys(JSON.parse(require("fs").readFileSync("/Users/aono_taketoshi/camp-pass/pass.txt"))).join(" "))'`
}

function update-closure-compiler {
  local dir=$(mktemp -d "/tmp/closure-compiler.XXXXXXXXX")
  local tmpfile=`basename $dir`.tar.gz
  local save_path=/tmp/$tmpfile
  wget -O $save_path http://dl.google.com/closure-compiler/compiler-latest.tar.gz
  tar -xvzf $save_path -C $dir &&\
  sudo mv $dir/compiler.jar /usr/local/bin/closure-compiler.jar && rm -rf $save_path && rm -rf $dir
}

node-use

compdef _pass-of pass-of

panewrap () { printf '\033k%s\033\\' "$1"; }

PS1="$PS1"'$([ -n "$TMUX" ] && tmux setenv TMUXPWD_$(tmux display -p "#D" | tr -d %) "$PWD")'