;; Object thread/
;; SEMANTICDB Tags save file
(semanticdb-project-database-file "thread/"
  :tables (list 
   (semanticdb-table "worker_queue.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("worker/worker_queue.h" include (:system-flag t) nil [1 33])
            ("os" type
               (:members 
                  ( ("WorkerQueue" function
                       (:constructor-flag t
                        :parent "WorkerQueue"
                        :type ("WorkerQueue" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [51 79])
                    ("WorkerQueue" function
                       (:destructor-flag t
                        :parent "WorkerQueue"
                        :type "void")
                        (reparse-symbol namespacesubparts) [80 109])
                    ("pop_request" function
                       (:parent "WorkerQueue"
                        :type ("WorkerQueue::Request" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [111 285]))                  
                :type "namespace")
                nil [35 288]))          
    :file "worker_queue.cc"
    :pointmax 282
    :fsize 305
    :lastmodtime '(20461 23285)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "channel.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("worker/channel.h" include (:system-flag t) nil [1 28])
            ("lib/make_shared.h" include (:system-flag t) nil [29 57])
            ("lib/bind.h" include (:system-flag t) nil [58 79])
            ("logging.h" include (:system-flag t) nil [80 100])
            ("lib/foreach.h" include (:system-flag t) nil [101 125])
            ("os" type
               (:members 
                  ( ("Channel" function
                       (:constructor-flag t
                        :parent "Channel"
                        :type ("Channel" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [142 220])
                    ("Channel" function
                       (:constructor-flag t
                        :parent "Channel"
                        :arguments 
                          ( ("limit" variable (:type "int") (reparse-symbol arg-sub-list) [239 249]))                          
                        :type ("Channel" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [222 312])
                    ("Channel" function
                       (:destructor-flag t
                        :parent "Channel"
                        :type "void")
                        (reparse-symbol namespacesubparts) [314 424])
                    ("Initialize" function
                       (:parent "Channel"
                        :typemodifiers ("inline")
                        :type "void")
                        (reparse-symbol namespacesubparts) [426 562])
                    ("Wait" function
                       (:parent "Channel"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("additional" variable (:type "bool") (reparse-symbol arg-sub-list) [606 622]))                          
                        :type ("WorkerQueue::Request" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [564 949])
                    ("CreateWorker" function
                       (:parent "Channel"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("i" variable (:type "int") (reparse-symbol arg-sub-list) [985 991])
                            ("additional" variable (:type "bool") (reparse-symbol arg-sub-list) [992 1008]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [951 1170])
                    ("Run" function
                       (:parent "Channel"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("id" variable (:type "int") (reparse-symbol arg-sub-list) [1197 1204])
                            ("additional" variable (:type "bool") (reparse-symbol arg-sub-list) [1205 1221]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1172 1544])
                    ("ProcessRequest" function
                       (:parent "Channel"
                        :typemodifiers ("inline")
                        :arguments 
                          ( ("fn" variable
                               (:reference 1
                                :constant-flag t
                                :type ("WorkerQueue::Request" type (:type "class") nil nil))
                                (reparse-symbol arg-sub-list) [1582 1613])
                            ("id" variable (:type "int") (reparse-symbol arg-sub-list) [1614 1621]))                          
                        :type "void")
                        (reparse-symbol namespacesubparts) [1546 1772]))                  
                :type "namespace")
                nil [126 1775]))          
    :file "channel.cc"
    :pointmax 1797
    :fsize 1847
    :lastmodtime '(20461 23251)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "worker_count.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("worker/worker_count.h" include (:system-flag t) nil [1 33])
            ("thread.h" include (:system-flag t) nil [34 53])
            ("os" type
               (:members 
                  ( ("thread_default_count" variable
                       (:typemodifiers ("static")
                        :constant-flag t
                        :type "int")
                        (reparse-symbol namespacesubparts) [69 111])
                    ("GetThreadCount" function (:type "int") (reparse-symbol namespacesubparts) [112 278])
                    ("WorkerCount" function
                       (:constructor-flag t
                        :parent "WorkerCount"
                        :arguments 
                          ( ("limit" variable (:type "int") (reparse-symbol arg-sub-list) [304 314]))                          
                        :type ("WorkerCount" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [279 415])
                    ("WorkerCount" function
                       (:destructor-flag t
                        :parent "WorkerCount"
                        :type "void")
                        (reparse-symbol namespacesubparts) [417 446])
                    ("current_thread_count" function
                       (:parent "WorkerCount"
                        :type "int")
                        (reparse-symbol namespacesubparts) [448 544])
                    ("running_thread_count" function
                       (:parent "WorkerCount"
                        :type "int")
                        (reparse-symbol namespacesubparts) [546 642])
                    ("add_thread_count" function
                       (:parent "WorkerCount"
                        :type "void")
                        (reparse-symbol namespacesubparts) [644 707])
                    ("sub_thread_count" function
                       (:parent "WorkerCount"
                        :type "void")
                        (reparse-symbol namespacesubparts) [709 772])
                    ("add_running_thread_count" function
                       (:parent "WorkerCount"
                        :type "void")
                        (reparse-symbol namespacesubparts) [774 845])
                    ("sub_running_thread_count" function
                       (:parent "WorkerCount"
                        :type "void")
                        (reparse-symbol namespacesubparts) [847 918])
                    ("limit" function
                       (:parent "WorkerCount"
                        :type "bool")
                        (reparse-symbol namespacesubparts) [920 993]))                  
                :type "namespace")
                nil [54 996]))          
    :file "worker_count.cc"
    :pointmax 972
    :fsize 1028
    :lastmodtime '(20461 23277)
    :unmatched-syntax 'nil
    )
   (semanticdb-table "worker.cc"
    :major-mode 'c++-mode
    :tags 
        '( ("worker/worker.h" include (:system-flag t) nil [1 27])
            ("logging.h" include (:system-flag t) nil [28 48])
            ("os" type
               (:members 
                  ( ("Worker" function
                       (:constructor-flag t
                        :parent "Worker"
                        :arguments 
                          ( ("max" variable (:type "int") (reparse-symbol arg-sub-list) [80 88]))                          
                        :type ("Worker" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [65 106])
                    ("default_worker" function
                       (:pointer 1
                        :parent "Worker"
                        :type ("Worker" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [109 284])
                    ("Remove" function
                       (:parent "Worker"
                        :type "void")
                        (reparse-symbol namespacesubparts) [286 337])
                    ("Worker::default_worker_limit" variable (:type "int") (reparse-symbol namespacesubparts) [338 376])
                    ("flag_" function
                       (:prototype-flag t
                        :parent "Worker"
                        :type ("atomic_count" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [377 407])
                    ("Worker::default_worker_" variable
                       (:pointer 1
                        :type ("Worker" type (:type "class") nil nil))
                        (reparse-symbol namespacesubparts) [408 440]))                  
                :type "namespace")
                nil [49 442]))          
    :file "worker.cc"
    :pointmax 434
    :fsize 464
    :lastmodtime '(20461 23269)
    :unmatched-syntax 'nil
    )
   )
  :file "!Users!aono_taketoshi!github!libos!src!thread!semantic.cache"
  :semantic-tag-version "2.0"
  :semanticdb-version "2.0"
  )
