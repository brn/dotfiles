(custom-set-variables
 ;; custom-set-variables was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(c-doc-author (format "Taketoshi Aono <%s>" c-doc-mail-address))
 '(c-doc-mail-address "dobaw20@gmail.com")
 '(c-hanging-braces-alist 'set-from-style)
 '(c-hanging-semi&comma-criteria 'set-from-style)
 '(c-report-syntactic-errors t)
 '(clang-format-style "Google")
 '(company-lsp-async t)
 '(company-lsp-cache-candidates nil)
 '(company-lsp-enable-recompletion t)
 '(company-lsp-enable-snippet t)
 '(desktop-save-mode t)
 '(direx-project:project-root-predicate-functions '(my/direx-root-p))
 '(flycheck-display-errors-delay 0.5)
 '(flycheck-highlighting-mode 'lines)
 '(flycheck-popup-tip-error-prefix "* ")
 '(flymake-google-cpplint-command "~/GitHub/styleguide/cpplint/cpplint.py")
 '(foreign-regexp/regexp-type 'javascript)
 '(haskell-font-lock-symbols t)
 '(help-at-pt-display-when-idle '(flymake-diagnostic) nil (help-at-pt))
 '(help-at-pt-timer-delay 0.1)
 '(indent-tabs-mode nil)
 '(irony-additional-clang-options '("-std=c++17" "-stdlib=libc++" "-DPLATFORM_64BIT"))
 '(js-indent-level 2)
 '(js2-allow-keywords-as-property-names t)
 '(js2-always-indent-assigned-expr-in-decls-p t)
 '(js2-auto-indent-p t)
 '(js2-auto-insert-semicolon t)
 '(js2-bounce-indent-p nil)
 '(js2-cleanup-whitespace t)
 '(js2-consistent-level-indent-inner-bracket-p t)
 '(js2-dynamic-idle-timer-adjust 2)
 '(js2-enter-indents-newline t)
 '(js2-global-externs t)
 '(js2-highlight-level 3)
 '(js2-idle-timer-delay 0)
 '(js2-indent-on-enter-key t)
 '(js2-mirror-mode t)
 '(js2-missing-semi-one-line-override t)
 '(js2-rebind-eol-bol-keys nil)
 '(js2-skip-preprocessor-directives nil)
 '(js2-strict-inconsistent-return-warning nil)
 '(js2-strict-missing-semi-warning t)
 '(js2-strict-trailing-comma-warning nil)
 '(js2-use-ast-for-indentation-p t)
 '(nxml-attribute-indent 4)
 '(nxml-child-indent 4)
 '(nxml-outline-child-indent 4)
 '(package-selected-packages
   '(foreign-regexp go-mode typo-suggest csharp-mode web-mode eglot mmm-mode powershell cmake-ide company-rtags all-the-icons-dired helm neotree typescript company-quickhelp-terminal nginx-mode eslint-fix nlinum cl company-quickhelp auto-async-byte-compile uuid auto-install haskell-unicode-input-method zencoding lsp use-package helm-company flycheck-popup-tip flycheck-rtags dash dash-functional google-c-style helm-core helm-rtags log4e moccur-edit multiple-cursors pos-tip prettier-js spinner textile-mode company-irony company-irony-c-headers auto-complete cider clojure-mode irony js2-mode json-mode json-reformat json-snatcher jsonrpc sbt-mode projectile company-lsp helm-lsp flymake-eslint git-gutter js2-refactor highlight2clipboard python-mode zencoding-mode yaml-mode slamhound rainbow-delimiters racer pretty-symbols powershell-mode popwin open-junk-file nodejs-repl markdown-mode mark-multiple js-doc jaunte init-loader haskell-mode gtags fuzzy flycheck-objc-clang exec-path-from-shell ensime eimp edbi dockerfile-mode direx color-moccur coffee-mode cmake-mode clojure-cheatsheet clang-format avy auto-complete-clang-async auto-complete-clang actionscript-mode ace-jump-mode ac-clang ac-cider ac-c-headers))
 '(reb-re-syntax 'foreign-regexp)
 '(rtags-tramp-enabled t)
 '(rustic-format-display-method 'pop-to-buffer-without-switch)
 '(sgml-basic-offset 4)
 '(speedbar-add-supported-extension '(".js" ".as" ".html" ".css" ".php"))
 '(speedbar-show-unknown-files t)
 '(speedbar-tag-hierarchy-method
   '(speedbar-prefix-group-tag-hierarchy spe edbar-trim-words-tag-hierarchy speedbar-simple-group-tag-hierarchy speedbar-sort -tag-hierarchy))
 '(sr-speedbar-auto-refresh t)
 '(sr-speedbar-max-width 200)
 '(sr-speedbar-width 60 t)
 '(sr-speedbar-width-console 150)
 '(typescript-indent-level 2)
 '(warning-suppress-types '((comp) (comp) (comp)))
 '(yas-trigger-key "TAB"))
(custom-set-faces
 ;; custom-set-faces was added by Custom.
 ;; If you edit it by hand, you could mess it up, so be careful.
 ;; Your init file should contain only one such instance.
 ;; If there is more than one, they won't work right.
 '(default ((t (:inherit nil :stipple nil :background "black" :foreground "white" :inverse-video nil :box nil :strike-through nil :overline nil :underline nil :slant normal :weight normal :height 90 :width normal))))
 '(company-preview ((t (:foreground "darkgray" :underline t))))
 '(company-preview-common ((t (:inherit company-preview))))
 '(company-scrollbar-bg ((t (:background "#121212"))))
 '(company-scrollbar-fg ((t (:background "#121212"))))
 '(company-tooltip ((t (:background "lightgray" :foreground "black"))))
 '(company-tooltip-common ((((type x)) (:inherit company-tooltip :weight bold)) (t (:inherit company-tooltip))))
 '(company-tooltip-common-selection ((((type x)) (:inherit company-tooltip-selection :weight bold)) (t (:inherit company-tooltip-selection))))
 '(company-tooltip-selection ((t (:background "steelblue" :foreground "white"))))
 '(dired-symlink ((t (:foreground "#00AAFF"))))
 '(font-lock-builtin-face ((t (:bold t :foreground "#00AAFF"))))
 '(font-lock-function-name-face ((t (:foreground "#66ff00"))))
 '(font-lock-keyword-face ((((class color) (min-colors 88) (background dark)) (:foreground "#22aaff" :weight bold))))
 '(font-lock-maximum-decoration t)
 '(helm-ff-directory ((t (:inherit font-lock-builtin-face :foreground "#0099FF"))))
 '(helm-ff-file ((t (:inherit font-lock-builtin-face :foreground "#FFFFFF"))))
 '(hi-blue-b ((((min-colors 88)) (:foreground "#00AAFF" :weight bold))))
 '(js2-instance-member-face ((t (:foreground "green"))))
 '(link ((((class color) (min-colors 88) (background light)) (:foreground "green" :underline t))))
 '(minibuffer-prompt ((t (:foreground "yellow"))))
 '(speedbar-directory-face ((((class color) (background light)) (:foreground "yellow"))))
 '(vhdl-speedbar-architecture-selected-face ((((min-colors 88) (class color) (background light)) (:foreground "#00AAFF" :underline t))))
 '(web-mode-comment-face ((t :inherit font-lock-comment-face)))
 '(web-mode-doctype-face ((t :inherit font-lock-doc-face)))
 '(web-mode-html-attr-name-face ((t :inherit font-lock-variable-name-face)))
 '(web-mode-html-attr-value-face ((t :inherit font-lock-string-face)))
 '(web-mode-html-tag-face ((t :inherit font-lock-function-name-face)))
 '(web-mode-server-comment-face ((t :inherit font-lock-comment-face))))

(require 'use-package)
(require 'package)
(setq package-check-signature nil)
(package-initialize)

(use-package init-loader :ensure nil)
(use-package cider :ensure nil)
(use-package c-doc)
(use-package whitespace :ensure nil)

(init-loader-load "~/.emacs.d/init/")
(setq debug-on-error nil)

;; for rustic
(with-eval-after-load 'rust-mode
  (cl-delete-if (lambda (element) (equal (cdr element) 'rust-mode)) auto-mode-alist)
  (cl-delete-if (lambda (element) (equal (cdr element) 'rustic-mode)) auto-mode-alist)
  (add-to-list 'auto-mode-alist '("\\.rs$" . rustic-mode)))

(add-to-list 'package-archives '("melpa" . "http://melpa.org/packages/"))
(add-to-list 'package-archives '("gnu" . "http://elpa.gnu.org/packages/"))
